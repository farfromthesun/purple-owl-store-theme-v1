<footer class="main-footer">
  <div class="container">
    {% comment %}
      <localization-form>
        {%- form 'localization', id: 'FooterCountryForm', class: 'localization-form' -%}
          <div class="no-js-hidden">
            <h2 class="caption-large text-body" id="FooterCountryLabel">{{ 'localization.country_label' | t }}</h2>
            <div class="disclosure">
              <button
                type="button"
                class="disclosure__button localization-form__select localization-selector link link--text caption-large"
                aria-expanded="false"
                aria-controls="FooterCountryList"
                aria-describedby="FooterCountryLabel"
              >
                {{ localization.country.name }} ({{ localization.country.currency.iso_code }}
                {{ localization.country.currency.symbol }})
                {% render 'icon-caret' %}
              </button>
              <div class="disclosure__list-wrapper" hidden>
                <ul id="FooterCountryList" role="list" class="disclosure__list list-unstyled">
                  {%- for country in localization.available_countries -%}
                    <li class="disclosure__item" tabindex="-1">
                      <a
                        class="link link--text disclosure__link caption-large{% if country.iso_code == localization.country.iso_code %} disclosure__link--active{% endif %} focus-inset"
                        href="#"
                        {% if country.iso_code == localization.country.iso_code %}
                          aria-current="true"
                        {% endif %}
                        data-value="{{ country.iso_code }}"
                      >
                        {{ country.name }}
                        <span class="localization-form__currency"
                          >({{ country.currency.iso_code }}
                          {{ country.currency.symbol }})</span
                        >
                      </a>
                    </li>
                  {%- endfor -%}
                </ul>
              </div>
            </div>
            <input type="hidden" name="country_code" value="{{ localization.country.iso_code }}">
          </div>
        {%- endform -%}
      </localization-form>
    {% endcomment %}
    <div class="footer-main">
      <div class="footer-main-left">
        <div class="footer-logo-container">
          <a href="/" title="Purple Owl Store" class="logo-shop-name-link">
            <span class="logo-shop-name">Purple Owl</span>
          </a>
        </div>
        <div class="footer-main-company-address">
          400 University Drive Suite 200 Coral Gables,<br>
          FL 33134 USA
        </div>
      </div>
      <div class="footer-main-right">
        <div class="footer-nav-container">
          <nav>
            <ul>
              {% for link in linklists['main-menu'].links %}
                <li>
                  <a href="{{ link.url }}" title="{{ link.title }}" class="footer-nav-link">{{ link.title }}</a>
                </li>
              {% endfor %}
            </ul>
          </nav>
        </div>
      </div>
    </div>
    <div class="footer-bottom">
      <span class="footer-bottom-copyrights">&#169 2025 Purple Owl eCommerce. All rights reverved.</span>
    </div>
  </div>
</footer>

{% comment %}
  {% javascript %}
    class LocalizationForm extends HTMLElement {
      constructor() {
        super();
        this.elements = {
          input: this.querySelector('input[name="locale_code"], input[name="country_code"]'),
          button: this.querySelector('button'),
          panel: this.querySelector('.disclosure__list-wrapper'),
        };
        this.elements.button.addEventListener('click', this.openSelector.bind(this));
        this.elements.button.addEventListener('focusout', this.closeSelector.bind(this));
        this.addEventListener('keyup', this.onContainerKeyUp.bind(this));

        this.querySelectorAll('a').forEach((item) => item.addEventListener('click', this.onItemClick.bind(this)));
      }

      hidePanel() {
        this.elements.button.setAttribute('aria-expanded', 'false');
        this.elements.panel.setAttribute('hidden', true);
      }

      onContainerKeyUp(event) {
        if (event.code.toUpperCase() !== 'ESCAPE') return;

        this.hidePanel();
        this.elements.button.focus();
      }

      onItemClick(event) {
        event.preventDefault();
        const form = this.querySelector('form');
        this.elements.input.value = event.currentTarget.dataset.value;
        if (form) form.submit();
      }

      openSelector() {
        this.elements.button.focus();
        this.elements.panel.toggleAttribute('hidden');
        this.elements.button.setAttribute(
          'aria-expanded',
          (this.elements.button.getAttribute('aria-expanded') === 'false').toString()
        );
      }

      closeSelector(event) {
        const shouldClose = event.relatedTarget && event.relatedTarget.nodeName === 'BUTTON';
        if (event.relatedTarget === null || shouldClose) {
          this.hidePanel();
        }
      }
    }

    customElements.define('localization-form', LocalizationForm);
  {% endjavascript %}
{% endcomment %}
